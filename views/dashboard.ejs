<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Sensor Dashboard</title>
  <link rel="stylesheet" href="/styles.css" />
</head>
<body class="dashboard-body">
  <!-- Main Header -->
  <header class="main-header">
    <a href="/" class="logo-link">
      <img src="/images/logo.png" alt="PowerSprout Logo" class="navbar-logo" />
    </a>
    <nav class="nav-links">
      <a href="/">Home</a>
      <a href="/dashboard">Dashboard</a>
      <a href="/#about">About</a>
    </nav>
    <img src="/images/menu.png" alt="Menu Icon" class="menu-icon" id="menuToggle" />
  </header>

  <!-- Slide-in Menu -->
  <div class="slide-menu" id="slideMenu">
      <div class="slide-menu-content">
        <a href="/">Home</a>
        <a href="/dashboard">Dashboard</a>
        <a href="/#about">About</a>
        <a href="/vision">Vision</a>
        <a href="/mission">Mission</a>
        <a href="/#team">Team</a>
        <a href="/iot">IOT</a>
      </div>
    </div>

  <!-- Dashboard Heading -->
  <h1 class="dashboard-heading">Sensor Monitoring Dashboard</h1>

  <!-- Table -->
  <table class="dashboard-table">
    <thead>
      <tr>
        <th>Sensor</th>
        <th>Value</th>
        <th>Time</th>
      </tr>
    </thead>
    <tbody>
      <% data.forEach(row => { %>
        <tr>
          <td><%= row.sensor_name %></td>
          <td><%= row.sensor_value %></td>
          <td><%= new Date(row.timestamp).toLocaleString() %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <!-- Graph -->
  <section id="chart-container">
    <canvas id="sensorChart" width="900" height="400"></canvas>
  </section>

  <a href="/" class="dashboard-back-link">‚Üê Back to Welcome</a>

  <!-- Chart.js Script -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    const ctx = document.getElementById('sensorChart').getContext('2d');

    const labels = ["2025-05-19 10:30:00"];

    const datasets = [
      {
        label: "Temperature sensor",
        data: [24.7],
        backgroundColor: 'rgba(80, 200, 120, 0.7)',
        borderColor: '#50c878',
        borderWidth: 2,
        custom: {
          What_it_does: "Measures the temperature of the microbial fuel cell environment to ensure optimal conditions for microbial activity."
        }
      },
      {
        label: "pH sensor",
        data: [6.8],
        backgroundColor: 'rgba(200, 80, 80, 0.7)',
        borderColor: '#c85050',
        borderWidth: 2,
        custom: {
          What_it_does: "Measures the acidity or alkalinity of the slurry to ensure optimal microbial activity, usually between pH 6.5 and 7.5."
        }
      },
      {
        label: "Weight sensor",
        data: [124.5],
        backgroundColor: 'rgba(80, 120, 200, 0.7)',
        borderColor: '#5078c8',
        borderWidth: 2,
        custom: {
          What_it_does: "Measures the weight of the slurry or biomass inside the fuel cell container to monitor material changes over time."
        }
      }
    ];

    const config = {
      type: 'bar',
      data: { labels, datasets },
      options: {
        responsive: true,
        animation: {
          duration: 3000,
          easing: 'easeOutBounce'
        },
        scales: {
          x: {
            title: { display: true, text: 'Time', color: '#c6e2c6' },
            ticks: { color: '#d5e8d4' },
            grid: { color: 'rgba(80, 200, 120, 0.2)' }
          },
          y: {
            beginAtZero: true,
            title: { display: true, text: 'Sensor Value', color: '#c6e2c6' },
            ticks: { color: '#d5e8d4' },
            grid: { color: 'rgba(80, 200, 120, 0.2)' }
          }
        },
        plugins: {
          tooltip: {
            callbacks: {
              label: function (context) {
                const dataset = context.dataset;
                const value = context.raw;
                const description = dataset.custom?.What_it_does || '';
                return `${dataset.label}: ${value}\n${description}`;
              }
            }
          },
          legend: { labels: { color: '#c6e2c6' } }
        }
      }
    };

    new Chart(ctx, config);

    // Slide menu toggle
    document.getElementById('menuToggle').addEventListener('click', () => {
      document.getElementById('slideMenu').classList.toggle('show');
    });

    document.querySelectorAll('.slide-menu a').forEach(link => {
      link.addEventListener('click', () => {
        document.getElementById('slideMenu').classList.remove('show');
      });
    });
  </script>
</body>
</html>
